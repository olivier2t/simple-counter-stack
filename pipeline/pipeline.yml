# YAML anchors
shared:
  - &task-merge-stack-and-config
    task: merge-stack-and-config
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cycloid/cycloid-toolkit
          tag: latest
      run:
        path: /usr/bin/merge-stack-and-config
      inputs:
        - name: git_config
          path: "config"
        - name: git_stack
          path: "stack"
      outputs:
        - name: merged-stack
          path: "merged-stack"


groups:
- name: overview
  jobs:
  - build-and-publish
#  - terraform-plan
#  - terraform-apply
#  - functional-tests
#- name: destroy
#  jobs:
#  - terraform-destroy

# resource_types:
# - name: terraform
#   type: docker-image
#   source:
#     repository: ljfranklin/terraform-resource
#     tag: '0.15.5'

# - name: cycloid-events
#   type: docker-image
#   source:
#     repository: cycloid/cycloid-events-resource


resources:
# - name: tfstate
#   type: terraform
#   source:
#     env_name: ((env))
#     backend_type: s3
#     backend_config:
#       bucket: ((terraform_storage_bucket_name))
#       key: ((terraform_storage_bucket_path))
#       workspace_key_prefix: ((project))
#       region: ((aws_region))
#       access_key: ((aws_access_key))
#       secret_key: ((aws_secret_key))
#     vars:
#       access_key: ((aws_access_key))
#       secret_key: ((aws_secret_key))
#       aws_region: ((aws_region))
#       env: ((env))
#       project: ((project))
#       customer: ((customer))

# The Terraform stack (will be merged with the config)
# - name: git_stack
#   type: git
#   source:
#     uri: ((git_stack_repository))
#     branch: ((git_stack_branch))
#     paths:
#       - terraform/*

# The Terraform config (will be merged with the stack)
# - name: git_config
#   type: git
#   source:
#     uri: ((git_config_repository))
#     branch: ((git_config_branch))
#     private_key: ((git_config_ssh_key))
#     paths:
#       - ((project))/terraform/((env))/*

- name: code
  type: git
  source:
    uri: ((git_code_repository))
    branch: ((git_code_branch))

# - name: cycloid-events
#   type: cycloid-events
#   source:
#     api_url: ((cycloid_api_url))
#     api_key: ((cycloid_api_key))
#     icon: fa-code-branch
#     organization: ((customer))
#     severity: info
#     type: Custom
#     tags:
#       - key: project
#         value: ((project))
#       - key: env
#         value: ((env))
#       - key: customer
#         value: ((customer))


jobs:
- name: build-and-publish
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
  - get: code
    trigger: true
  - task: install
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: node
          tag: 13.10.1-stretch
      inputs:
      - name: code
      outputs:
      - name: dependencies
        path: code/node_modules
      run:
        path: npm
        args: ["install"]
        dir: code
  - task: test
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: node
          tag: 13.10.1-stretch
      inputs:
      - name: code
      - name: dependencies
        path: code/node_modules
      run:
        path: npm
        args: ["run", "test"]
        dir: code
#  - task: build
#    config:
#      platform: linux
#      image_resource:
#        type: registry-image
#         source:
#           repository: node
#           tag: 13.10.1-stretch
#       inputs:
#       - name: code
#       - name: dependencies
#         path: code/node_modules
#       outputs:
#       - name: dist
#         path: dist
#       run:
#         path: npm
#         args: ["run", "build"]
#         dir: code
  - task: publish
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: node
          tag: 13.10.1-stretch
      inputs:
      - name: code
      - name: dependencies
        path: code/node_modules
      params:
        NPMRC: ((custom_npmrc.key))
      run:
        path: sh
        args:
        - -exc
        - |
          echo $NPMRC > ~/.npmrc
          npm publish